INSTRUCTIONS:

elm make GUI.elm

-----------------

So far, we have implemented the data structures used in the project as well as a basic interface for defining bids, bidding, and retriving the meanings of defined bids. The file Bidding.elm contains functions defining and allowing access to the main data structure, which is a tree of possible next bids where each bid contains a list or lists of requirements, a bid value, and a subtree containing subsequent bids. The file GUI.elm contains the main function and defines the user interface.

To display the user interface, we created two modes that can be switched between. The bidding practice mode is for when the user has defined a system and wants to bid with the computer, and the edit system mode is for defining and updating the system. Currently we do not yet have the page save the user's system on reload, although that is something that we hope to add in the next two weeks. The user can switch between the two modes through buttons at the very top of the page. These access the same data structures but have a completely different implementation of the view function.

The edit mode allows the user to define and modify their system. So far the main work was to create a framework for navigating around to different sequences of bids. A bar of buttons representing bids along the top displays the current location, and clicking on one allows the user to go to that inital sequence of the bidding. Once on a bid, the follow-up bids are displayed in the center of the screen. New bids can be added, removed, and reprioritized. Each bid has boxes defining the ranges of possible hands that could bid them. Clicking on a bid adds it to the current bid sequence, and allows the user to then define the follow ups bids to that. A search bar just below the top bar also allows the user to quickly go to a specific location in the tree without clicking through. These functionalities show significant progress toward a usable user interface that we set the goal of creating in our proposal.

Most of the necessary functionality of the edit system mode is in place, but there are still several things neccessary for improving it. Some of the things that still need to be done for this mode include allowing for multiple meanings for a bid, making the interface more intuitive and useable, resizing and aligning boxes, preventing the user from creating bids which are not allowed, and providing better documentation. Overall, we think these are all doable tasks by the completion time of the project. For this part of the project, progress seems roughly consistent with what was originally planned and does not need to be changed in scope. Some of the more advanced features we had envisioned (such as ways for the user to define multiple bids at once using a pattern) will most likely not have time to be implemented.

The practice mode allows the user to practice bidding with their system on a given random hand. The redeal button near the top of the screen lets the user redeal, and at any point during practice, the user can only see his/her hand (not his/her partner's, and not the opponents'). Below the hand is the set of allowed bids remaining given the existing bid sequence, which is displayed just below. For now, the user can only really play around with these bids, as we have not finished implementing the computer-partner aspect of our proposal. If a given bid is defined, hovering over that bid in the "bidding box" section displays the user-defined meaning at the bottom of the screen. Once a bid is chosen, it is added to the current bid sequence, and the available bids are updated. Hovering over a bid in the current bid sequence similarly displays its meaning (or "undefined").

The main part of the practice mode that we have yet to finish is the implementation of a computer partner. We would like users to be able to enter a bidding system, and then be able to practice that bidding system with the computer. We have already implemented the back end of this functionality, meaning that given a system and a hand, we have the means of selecting the highest priority bid deemed appropriate. Really all that has to be done now is add this functionality to the GUI. After a practice bidding sequence concludes (with a "Pass"), we would also like to display the computer-partner's hand to the user, to make sure that they were satisfied with how their bidding system performed on the random hands. Neither of these goals suggests any need to alter the scope of our proposal. One last addition that we may make if we have extra time is the implementation of opponents. Certain bids (such as "double" and "redouble") only exist in the context of opponents, so we may try to allow for system definition of bids in competition with opponents. This seems quite challenging at the moment, but we hope to address it if we finish everything else with enough time left.
