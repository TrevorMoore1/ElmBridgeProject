Proposal 1

  This project aims to create a program that will aid in bidding system design for the card game Bridge, and allow a player to practice bidding their system with the computer. In Bridge, a deck of cards is dealt between 4 players, two pairs of partners, and the partners bid to what they believe to be the right contract without bidding too high. They are only allowed to communicate through their bids, so they agree on certain meanings to assign to bids, different from what is said formally with the bid. Thus players create varying bidding systems, which are maps from bids to possible hand types, or equivalently, agreements with their partner for how to bid in various situations. 
  
  The program created by this project will allow the user to input their system through an interface in which -- after each sequence of bidding -- they specify what to bid next depending on their hand type. This will be stored internally as a tree-like structure where each bid has an associated hand type and a list of children that are the bids that follow. The bidding system will not need to be provided all at once, and can be updated and edited as the user further refines it over a long period of time. The program will deal random hands and can bid with the user, using the bidding rules that they specified. We also aim for it to be able to quickly simulate bidding many hands and determine where there are system errors, such as hand types with no bid or multiple bids defined. 
  
  The most challenging part of this project will be designing and implementing the interface for the user to input their bidding system. We would need to decide what kinds of conditions the user is allowed to have on what constitutes different hand types. The conditions need to be specific enough to allow the user to define their bids properly, but also general enough that it does not take too long for the user to define their bids. It will likely often come up that there will be categories of bids that are a specific “OR” of different hand shapes, and it would be important to design an interface that minimizes the need to input long expressions that come up over and over again. In general, we want the interface to feel intuitive and easy to use.
  
  We would use several of the topics we have learned in class including random number generation for the hands, clickable buttons and subscriptions to design the interface, lists and trees for storing the system, and how to save data so that it persists after page reload. We wouldn’t need to learn too much more beyond what we have learned in class, although we think learning more about graphics libraries to help with the interface would be useful.
  
  Additionally, we have a few ways to expand the project if needed. One would be to implement “double dummy” analysis, which refers to determining the optimal play of the hand if the players could see all the cards. In addition to seeing whether there is a bid defined for a hand, this would allow the program to do some degree of evaluation of an auction's ultimate success. Another possibility would be that in addition to following rules regarding what to bid, the program would interpret its partner’s bids. It would maintain some sort of list containing possible hands its partner could have, narrowing this list down as its partner bid. It could then potentially use this in order to help bid in some situations.



Proposal 2

  The main goal of this project is to create a program that will allow four players to play bridge with each other over the course of an extended period of time. Each hand of bridge can be broken into two segments, usually called the "auction" and the "play". While the play requires a fair amount of memory work, and must therefore take place within just a few minutes, the auction can proceed as slowly as possible without inducing any memory strain. Playing in person, of course, both the auction and play occur relatively quickly. Unfortunately, nearly all available bridge software nowadays is modeled after this, meaning that players cannot, say, bid an auction at the rate of one bid per hour (seeing as all players are required to be present at the virtual table).

  The goal of this project would be to create software that would allow either single partnerships or two partnerships as opponents to bid sporadically over an extended period of time, with or without any time constraints. To understand this, picture the difference between face-to-face Scrabble and Words with Friends. We hope that allowing players more time to think between bids will lead to better judgement and system understanding, if not just convenience.

  The relevant aspects of Elm that we have learned in class will be similar to those in our first proposal. Random number generation (permutations, specifically) for dealing the hands, clickable buttons and subscriptions for the auction interface, and simple lists for storing auction histories. As in our first proposal, learning more about graphics libraries would probably help.

  The main Elm functionality that we would need to explore for the first time would be synchronization between users. When each user reloads the page, possibly after a long period of time, the updated auction would need to be displayed. We are unsure of how this would best be approached, as a standard single-server model might be difficult to implement given that we hope to not require any users to keep their devices on at all times. Even this model would require some Elm learning, though.

  Apart from the main challenge of inter-device synchronization, we expect this project proposal to be relatively simple. We've identified three areas of possible expansion. (1) We might add chat features to the program, either between all players or just partners. (2) We might add the play of the hand, which would need to take place over a shorter period of time and would not add to existing bridge software, but would at least allow for better result analysis. (3) We might add a note-taking feature, attachable to bids in the auction and cards played. Seeing as each hand could take place over many hours, players could forget their thoughts and concerns about agreements, and would be able to document these without giving unauthorized information to their partners during the hand.
